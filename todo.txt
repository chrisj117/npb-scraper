npbScrape.py
# - Misc short term -
# TODO: merge npbPlayoffScraper.py functionality
# TODO: generate_plots() type checking errors
# TODO: continually update fip_consts, park_factors (need mr yakyu)
# TODO: standardize docstring formats
# TODO: refactor player stat org methods similarly to team stat org
# TODO: more robust error checking in init()s if empty Raw data comes in
# TODO: add checking raw file existence in init() (also remove user output
# warnings)
# TODO: make input files year specific (I.E. /input/2024, /input/2025, etc)
# TODO: merge and update npbPlayerUrlScraper roster scraping to update
# roster_data.csv *
# TODO: linting (https://github.com/psf/black + pylint)
# TODO: unit tests
# TODO: auto commit new scrapes
# TODO: multithread scrape, org, and percentiles
# TODO: write a README.txt for web scraping, no ddos, this is educational, etc
# TODO: TURN INTO self.constDf, then change player_org? (IN StandingsData
# init()) - end goal is to alleviate dependence on each other
# TODO: eventually make portable and give to Gio
    # TODO: put on streamlit/huggingface/etc so people can use it w/o install
    # TODO: streamlit app for player plots
# TODO: refactors for any ORG functions
# TODO: potential refactors on repeating statements in any stat grab function
# TODO: refactor argBypass in main()
# TODO: move common functions to a library
# TODO: look into type hinting

# - Possible future stats/data -
# TODO: projection of future stats
# TODO: more visual data (plots/graphs)
# TODO: scrape even more years before 2020
# TODO: team pages/player pages